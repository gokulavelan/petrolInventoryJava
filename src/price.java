
import javax.swing.table.DefaultTableModel;
import java.sql.*; 
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acer
 */
public class price extends javax.swing.JFrame {

    public String[] priceDetails;

    /**
     * Creates new form price
     */
    public price() {
        initComponents();
    }

    DefaultTableModel model;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        chkPetrol = new javax.swing.JCheckBox();
        chkkoil = new javax.swing.JCheckBox();
        chkDiesel = new javax.swing.JCheckBox();
        txtpqty = new javax.swing.JTextField();
        txtkqty = new javax.swing.JTextField();
        txtdqty = new javax.swing.JTextField();
        Cbpetrol = new javax.swing.JComboBox<>();
        Cbkoil = new javax.swing.JComboBox<>();
        Cbdiesel = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtbill = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Vehicle Petrol Shop Inventory");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 36)); // NOI18N
        jLabel2.setForeground(jLabel1.getForeground());
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("1000ML - 1L");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        chkPetrol.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        chkPetrol.setText("Petrol");

        chkkoil.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        chkkoil.setText("Kerosene");
        chkkoil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkkoilActionPerformed(evt);
            }
        });

        chkDiesel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        chkDiesel.setText("Diesel");

        txtkqty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkqtyActionPerformed(evt);
            }
        });

        Cbpetrol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ML", "L" }));

        Cbkoil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ML", "L" }));

        Cbdiesel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ML", "L" }));

        jButton1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkDiesel)
                                .addGap(46, 46, 46)
                                .addComponent(txtdqty))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkkoil)
                                .addGap(18, 18, 18)
                                .addComponent(txtkqty, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkPetrol)
                                .addGap(46, 46, 46)
                                .addComponent(txtpqty, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Cbpetrol, 0, 92, Short.MAX_VALUE)
                            .addComponent(Cbkoil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cbdiesel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cbpetrol, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkPetrol)
                        .addComponent(txtpqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkkoil)
                    .addComponent(txtkqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cbkoil, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDiesel)
                    .addComponent(txtdqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cbdiesel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Price", "Quantity", "Total"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        txtbill.setEditable(false);
        txtbill.setBackground(new java.awt.Color(204, 204, 204));
        txtbill.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        jLabel3.setText("Total");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(298, 298, 298))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtbill, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbill, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void chkkoilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkkoilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkkoilActionPerformed

    private void txtkqtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkqtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkqtyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[] priceDetails = new String[3];
        Connection myConn = null;
        Statement myStmt = null;
        ResultSet myRs = null;

        String user = "root";
        String pass = "";
        int j = 0;
        try {
            // 1. Get a connection to database
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sql", user, pass);

            // 2. Create a statement
            myStmt = myConn.createStatement();

            // 3. Execute SQL query
            myRs = myStmt.executeQuery("select * from price");

            // 4. Process the result set
            while (myRs.next()) {
                System.out.println(myRs.getString("type") + ", " + myRs.getString("price"));
                priceDetails[j] = myRs.getString("price");
                j++;
            }

        } catch (Exception exc) {
            exc.printStackTrace();
        } finally {
        }
        
        String item;
        double price,price2,price3;
        double qty;
        String option;
        double cal;
        double sum = 0.0;
        if(chkPetrol.isSelected())
        {
            item = chkPetrol.getText();
            price = Double.parseDouble(priceDetails[0]);
            qty = Double.parseDouble(txtpqty.getText());
            option = Cbpetrol.getSelectedItem().toString();
            
            if(option.equals("ML"))
            {
                cal = price * qty/1000;
                model =  (DefaultTableModel)jTable1.getModel();
                model.addRow(new Object[]
                {
                    item,
                    price,
                    qty,
                    cal
                    
                });                      
            }
            
            else
            {
                 cal = price * qty;
                model =  (DefaultTableModel)jTable1.getModel();
                model.addRow(new Object[]
                {
                    item,
                    price,
                    qty,
                    cal
                    
                });                
                
                
            }
        }
         if(chkDiesel.isSelected())
        {
            item = chkDiesel.getText();
            price = Double.parseDouble(priceDetails[2]);
            qty = Double.parseDouble(txtdqty.getText());
            option = Cbdiesel.getSelectedItem().toString();
            
            if(option.equals("ML"))
            {
                cal = price * qty/1000;
                model =  (DefaultTableModel)jTable1.getModel();
                model.addRow(new Object[]
                {
                    item,
                    price,
                    qty,
                    cal
                    
                });                      
            }
            
            else
            {
                 cal = price * qty;
                model =  (DefaultTableModel)jTable1.getModel();
                model.addRow(new Object[]
                {
                    item,
                    price,
                    qty,
                    cal
                    
                });                
            }
        }
        
          if(chkkoil.isSelected())
        {
            item = chkkoil.getText();
            price = Double.parseDouble(priceDetails[1]);
            qty = Double.parseDouble(txtkqty.getText());
            option = Cbkoil.getSelectedItem().toString();
            
            if(option.equals("ML"))
            {
                cal = price * qty/1000;
                model =  (DefaultTableModel)jTable1.getModel();
                model.addRow(new Object[]
                {
                    item,
                    price,
                    qty,
                    cal
                    
                });                      
            }
            
            else
            {
                 cal = price * qty;
                model =  (DefaultTableModel)jTable1.getModel();
                model.addRow(new Object[]
                {
                    item,
                    price,
                    qty,
                    cal
                    
                });                
            }
        }
        
        for(double i=0; i<jTable1.getRowCount(); i++)
       {
 
            sum = sum + Double.parseDouble(jTable1.getValueAt((int)i,3).toString());
       }
        txtbill.setText(Double.toString(sum));
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(price.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(price.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(price.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(price.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new price().setVisible(true);
            }
        });
      

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Cbdiesel;
    private javax.swing.JComboBox<String> Cbkoil;
    private javax.swing.JComboBox<String> Cbpetrol;
    private javax.swing.JCheckBox chkDiesel;
    private javax.swing.JCheckBox chkPetrol;
    private javax.swing.JCheckBox chkkoil;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtbill;
    private javax.swing.JTextField txtdqty;
    private javax.swing.JTextField txtkqty;
    private javax.swing.JTextField txtpqty;
    // End of variables declaration//GEN-END:variables
}
